1.1 Sentiment Analysis Model

#importing libraries
import numpy as np
import pandas as pd

#importing datasets
from google.colab import drive
drive.mount('/content/drive')
dataset = pd.read_csv('./drive/MyDrive/Colab Notebooks/2 Sentiment Analysis/1.2 Restaurant Reviews_Fresh Dump.tsv', delimiter = '\t', quoting = 3)
dataset.head()

#data cleaning
import re
import nltk

nltk.download('stopwords')

from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
ps = PorterStemmer()

all_stopwords = stopwords.words('english')
all_stopwords.remove('not')

corpus=[]

for i in range(0, 100):
  review = re.sub('[^a-zA-Z]', ' ', dataset['Review'][i])
  review = review.lower()
  review = review.split()
  review = [ps.stem(word) for word in review if not word in set(all_stopwords)]
  review = ' '.join(review)
  corpus.append(review)

#data transformation
from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features = 1420)
X = cv.fit_transform(corpus).toarray()
y = dataset.iloc[:, -1].values

# Saving BoW dictionary to later use in prediction
import pickle
bow_path = './drive/MyDrive/Colab Notebooks/Sentiment Analysis/3.1 BoW_Sentiment Model.pkl'
pickle.dump(cv, open(bow_path, 'wb'))

#Dividing dataset into training and test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)


#Model fitting (Naive Bayes)
from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(X_train, y_train)

# Exporting NB Classifier to later use in prediction
import joblib
joblib.dump(classifier, './drive/MyDrive/Colab Notebooks/Sentiment Analysis/3.2 Classifier_Sentiment Model') 


#Model performance
y_pred = classifier.predict(X_test)

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)

accuracy_score(y_test, y_pred)

y_pred = classifier.predict(X_test)
print(y_pred)






1.2 Sentiment Predictor using the above model

#Importing libraries
import numpy as np
import pandas as pd

#Importing dataset (from google drive)

from google.colab import drive
drive.mount('/content/drive')

dataset = pd.read_csv('./drive/My Drive/Colab Notebooks/Sentiment Analysis/Restaurant Review Fresh Dump.tsv', delimiter = '\t', quoting = 3)
dataset.head()

# Data cleaning

import re
import nltk

nltk.download('stopwords')

from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
ps = PorterStemmer()

all_stopwords = stopwords.words('english')
all_stopwords.remove('not')

corpus=[]

for i in range(0, 100):
  review = re.sub('[^a-zA-Z]', ' ', dataset['Review'][i])
  review = review.lower()
  review = review.split()
  review = [ps.stem(word) for word in review if not word in set(all_stopwords)]
  review = ' '.join(review)
  corpus.append(review)

#Data transformation

# Loading BoW dictionary
from sklearn.feature_extraction.text import CountVectorizer
import pickle
cvFile='./drive/MyDrive/Colab Notebooks/Sentiment Analysis/3.1 BoW_Sentiment Model.pkl'
# cv = CountVectorizer(decode_error="replace", vocabulary=pickle.load(open('./drive/MyDrive/Colab Notebooks/2 Sentiment Analysis (Basic)/3.1 BoW_Sentiment Model.pkl', "rb")))
cv = pickle.load(open(cvFile, "rb"))


X_fresh = cv.transform(corpus).toarray()
X_fresh.shape

#Predictions (via sentiment classifier)
import joblib
classifier = joblib.load('./drive/MyDrive/Colab Notebooks/Sentiment Analysis/3.2 Classifier_Sentiment Model')

y_pred = classifier.predict(X_fresh)
print(y_pred)

dataset['predicted_label'] = y_pred.tolist()
dataset.head()

dataset.to_csv("./drive/MyDrive/Colab Notebooks/Sentiment Analysis/Predicted_Sentiments_Fresh_Dump.tsv", sep='\t', encoding='UTF-8', index=False)